package com.tjmolinski.bloom;

import java.util.Calendar;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;

public class AlarmTask implements Runnable {
	// The date selected for the alarm
	private final Calendar date;
	// The android system alarm manager
	private final AlarmManager am;
	// Your context to retrieve the alarm manager from
	private final Context context;
	// Bits to tell which days are repeating
	private final byte days;

	public AlarmTask(Context context, Calendar date, byte selectors) {
		this.context = context;
		this.am = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
		this.date = date;
		this.days = selectors;
	}

	@Override
	public void run() {
		if((days&0x1) == 1) { //Sunday
			setRepeatingAlarm(1);
		}
		if((days&0x2) == 2) { //Monday
			setRepeatingAlarm(2);
		}
		if((days&0x3) == 3) { //Tuesday
			setRepeatingAlarm(3);
		}
		if((days&0x4) == 4) { //Wednesday
			setRepeatingAlarm(4);
		}
		if((days&0x5) == 5) { //Thursday
			setRepeatingAlarm(5);
		}
		if((days&0x6) == 6) { //Friday
			setRepeatingAlarm(6);
		}
		if((days&0x7) == 7) { //Saturday
			setRepeatingAlarm(7);
		}
	}
	
	private void setRepeatingAlarm(int dayOfWeek) {
		// Request to start are service when the alarm date is upon us
		// We don't start an activity as we just want to pop up a notification
		// into the system bar not a full activity
		Intent intent = new Intent(context, NotifyService.class);
		intent.putExtra(NotifyService.INTENT_NOTIFY, true);
		PendingIntent pendingIntent = PendingIntent.getService(context, 0, intent, 0);
		
		date.set(Calendar.DAY_OF_WEEK, dayOfWeek);
		am.setRepeating(AlarmManager.RTC_WAKEUP, date.getTimeInMillis(), 1000*60*60*24*7, pendingIntent);
	}
}